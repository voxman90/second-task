mixin dropdown__option(name, value)
  .dropdown__option.js-dropdown__option
    .dropdown__option-name= name
    div(
      class='dropdown__option-button dropdown__option-button-minus js-dropdown__option-button-minus',
      class=(parseInt(value) === 0) ? 'dropdown__option-button_faded' : undefined,
      role='button',
      tabindex='0',
    )= '-'
    .dropdown__option-value.js-dropdown__option-value= value
    div(
      class='dropdown__option-button js-dropdown__option-button-plus',
      role='button',
      tabindex ='0',
    )= '+'

mixin dropdown(args = {}, attr = {})
  - const { haveButtons, left, right, name, value, options } = args
  - const barModif = (haveButtons) ? 'dropdown__bar_instant-count' : ''
  .dropdown&attributes(attributes)
    +label(left, right).dropdown__label
      +input-text({ name: name, value: value })(class='dropdown__input js-dropdown__input', readonly)
      .dropdown__icon.js-dropdown__icon
        +icon({ name: 'expand_more' })
    div(class=`dropdown__bar js-dropdown__bar dropdown__bar_hidden dropdown__bar_shadow ${barModif}`)
      .js-dropdown__options
        each value, name in options
          +dropdown__option(name, value)
      if haveButtons
        .dropdown__buttons.js-dropdown__buttons
          +button({ text: 'ОЧИСТИТЬ', name: `${name}-clear` })(class='dropdown__button-clear', type='button')
          +button({ text: 'ПРИМЕНИТЬ', name: `${name}-apply` })(class='dropdown__button-apply', type='button')
